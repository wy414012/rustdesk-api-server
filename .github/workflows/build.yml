name: CI

on:
  push:
  pull_request:
  workflow_dispatch:
  release:
    types: [published]


jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        job:
          - { platform: "amd64", goos: "linux", file_ext: "tar.gz" }
          - { platform: "arm64", goos: "linux", file_ext: "tar.gz" }
          - { platform: "armv7l", goos: "linux", file_ext: "tar.gz" }
          - { platform: "amd64", goos: "windows", file_ext: "zip" }
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: wy414012/rustdesk-api-web
          path: rustdesk-api-web
      - name: Set up Go environment
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'  # 选择 Go 版本

      - name: Set up npm
        uses: actions/setup-node@v2
        with:
          node-version: '20'


      - name: build rustdesk-api-web
        run: |
          cd rustdesk-api-web
          npm install
          npm run build
          mkdir ../resources/admin/ -p
          cp -ar dist/* ../resources/admin/

      - name: tidy
        run: go mod tidy

      - name: swag
        run: |
          go install github.com/swaggo/swag/cmd/swag@latest
          swag init -g cmd/apimain.go --output docs/api --instanceName api --exclude http/controller/admin
          swag init -g cmd/apimain.go --output docs/admin --instanceName admin --exclude http/controller/api

      - name: Build for ${{ matrix.job.goos }}-${{ matrix.job.platform }}
        run: |
          mkdir release -p
          cp -ar resources release/
          cp -ar docs release/
          cp -ar conf release/
          mkdir -p release/data
          mkdir -p release/runtime
          if [ "${{ matrix.job.goos }}" = "windows" ]; then
            sudo apt-get install gcc-mingw-w64-x86-64 zip -y
            GOOS=${{ matrix.job.goos }} GOARCH=${{ matrix.job.platform }} CC=x86_64-w64-mingw32-gcc CGO_LDFLAGS="-static" CGO_ENABLED=1 go build -ldflags "-s -w" -o ./release/rustdesk-api-server.exe ./cmd/apimain.go
            zip -r ${{ matrix.job.goos}}-${{ matrix.job.platform }}.${{matrix.job.file_ext}} ./release/*
          else
            if [ "${{ matrix.job.platform }}" = "arm64" ]; then
                wget https://musl.cc/aarch64-linux-musl-cross.tgz
                tar -xf aarch64-linux-musl-cross.tgz
                export PATH=$PATH:$PWD/aarch64-linux-musl-cross/bin
                GOOS=${{ matrix.job.goos }} GOARCH=${{ matrix.job.platform }} CC=aarch64-linux-musl-gcc CGO_LDFLAGS="-static" CGO_ENABLED=1 go build -ldflags "-s -w" -o ./release/arustdesk-api-server ./cmd/apimain.go
            elif [ "${{ matrix.job.platform }}" = "armv7l" ]; then
                wget https://musl.cc/armv7l-linux-musleabihf-cross.tgz
                tar -xf armv7l-linux-musleabihf-cross.tgz
                export PATH=$PATH:$PWD/armv7l-linux-musleabihf-cross/bin
                GOOS=${{ matrix.job.goos }} GOARCH=arm GOARM=7 CC=armv7l-linux-musleabihf-gcc CGO_LDFLAGS="-static" CGO_ENABLED=1 go build -ldflags "-s -w" -o ./release/rustdesk-api-server ./cmd/apimain.go
            else
              sudo apt-get install musl musl-dev musl-tools -y
              GOOS=${{ matrix.job.goos }} GOARCH=${{ matrix.job.platform }} CC=musl-gcc CGO_LDFLAGS="-static" CGO_ENABLED=1 go build -ldflags "-s -w" -o ./release/rustdesk-api-server ./cmd/apimain.go
            fi
            tar -czf ${{ matrix.job.goos}}-${{ matrix.job.platform }}.${{matrix.job.file_ext}} ./release/*
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: rustdesk-api-${{ matrix.job.goos }}-${{ matrix.job.platform }}
          path: |
            ${{ matrix.job.goos}}-${{ matrix.job.platform }}.${{matrix.job.file_ext}}
            
      - name: Upload to GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ matrix.job.goos}}-${{ matrix.job.platform }}.${{matrix.job.file_ext}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}